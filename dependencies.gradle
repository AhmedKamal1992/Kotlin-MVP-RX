ext {

  kotlinExtensionVersion = '1.1.51'

  kotlinExtensionDependecy = [

          kotlin : "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinExtensionVersion"

  ]

  supportLibrayVersion = '26.1.0'
  constraintLayoutVersion = "1.0.2"

  supportDependencies = [

      design           : "com.android.support:design:${supportLibrayVersion}",
      appcompat        : "com.android.support:appcompat-v7:${supportLibrayVersion}",
      cardview         : "com.android.support:cardview-v7:${supportLibrayVersion}",
      recyclerview     : "com.android.support:recyclerview-v7:${supportLibrayVersion}",
      constraintLayout : "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"
  ]

  retrofitRxVersion = '2.2.0'
  retrofitVersion = '2.3.0'
  retrofitConverterVersion = '2.3.0'
  glideVersion = '3.8.0'

  squareDependencies = [

      retrofit       : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
      adapter_rx_java: "com.squareup.retrofit2:adapter-rxjava2:${retrofitRxVersion}",
      converter_gson : "com.squareup.retrofit2:converter-gson:${retrofitConverterVersion}",
      glide          : "com.github.bumptech.glide:glide:${glideVersion}"
  ]

  rxandroidVersion = '2.0.1'
  rxjavaVersion = '2.1.5'

  reactiveDependencies = [
      rxandroid: "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}",
      rxjava   : "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"]


  dependcyInjectionVersion = '2.12'
  dependancyProviderVersion = '3.1.1'

  injectionDependencies = [
          dagger2           : "com.google.dagger:dagger:${dependcyInjectionVersion}",
          kotlinExtension   : "com.google.dagger:dagger-compiler:${dependcyInjectionVersion}",
          kotlinProvider    : "org.glassfish:javax.annotation:${dependancyProviderVersion}"]

  junitVersion = '4.12'
  mockitoVersion = '1.10.19'
  robolectricVersion = '3.0'
  toothpickVersion = '1.1.1'

  testingDependencies = [
      junit             : "junit:junit:${junitVersion}",
      mockito           : "org.mockito:mockito-core:${mockitoVersion}",
      robolectric       : "org.robolectric:robolectric:${robolectricVersion}",
      toothpickRuntime  : "com.github.stephanenicolas.toothpick:toothpick-runtime:${toothpickVersion }",
      toothpickCompiler : "com.github.stephanenicolas.toothpick:toothpick-compiler:${toothpickVersion }",
      toothpickTesting  : "com.github.stephanenicolas.toothpick:toothpick-testing:${toothpickVersion }"
  ]

}